<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="cn.com.checknull.controller" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	<!-- 启动注解功能 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>
	<mvc:annotation-driven/>
    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler />
	<!-- 定义JSP文件的位置 -->  
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/page/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!--配置拦截器,多个拦截器,顺序执行 -->  
	<mvc:interceptors> 
		<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->     
	    <bean class="cn.com.checknull.interceptor.PermissionInterceptor"></bean>
	    <bean class="cn.com.checknull.interceptor.Log4jFormatInterceptor"></bean>
	</mvc:interceptors>
	
	<!-- 支持Shiro对Controller的方法级AOP安全控制， 必须放在SpringMvc的配置文件中-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor" >
    	<property name="proxyTargetClass" value="true"></property>
    </bean>
</beans>
